// <auto-generated />
using System;
using FoodService.Modellayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodService.Migrations
{
    [DbContext(typeof(ServiceContext))]
    [Migration("20231228170852_UpdatedRelationships")]
    partial class UpdatedRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodService.Modellayer.AdminUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("FoodService.Modellayer.CustomerGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Customer__3214EC2718DCCB36");

                    b.ToTable("CustomerGroup", (string)null);
                });

            modelBuilder.Entity("FoodService.Modellayer.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerGroupId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerGroupID");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("SalesItemGroupId")
                        .HasColumnType("int")
                        .HasColumnName("ProductGroupID");

                    b.HasKey("Id")
                        .HasName("PK__Discount__3214EC272E754D2D");

                    b.HasIndex("CustomerGroupId");

                    b.HasIndex("SalesItemGroupId");

                    b.ToTable("Discount", (string)null);
                });

            modelBuilder.Entity("FoodService.Modellayer.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("IngredientPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id")
                        .HasName("PK__Ingredie__3214EC2778E4B991");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Ingredient", (string)null);
                });

            modelBuilder.Entity("FoodService.Modellayer.IngredientOrderline", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("int")
                        .HasColumnName("IngredientID");

                    b.Property<int>("OrderlineId")
                        .HasColumnType("int")
                        .HasColumnName("OrderlineID");

                    b.Property<int>("Delta")
                        .HasColumnType("int");

                    b.HasKey("IngredientId", "OrderlineId")
                        .HasName("PK__Ingredie__8127A0A74100BD35");

                    b.HasIndex("OrderlineId");

                    b.ToTable("IngredientOrderline", (string)null);
                });

            modelBuilder.Entity("FoodService.Modellayer.IngredientSalesItem", b =>
                {
                    b.Property<int>("SalesItemId")
                        .HasColumnType("int")
                        .HasColumnName("SalesItemID");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int")
                        .HasColumnName("IngredientID");

                    b.Property<int>("Count")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("Max")
                        .HasColumnType("int");

                    b.Property<int>("Min")
                        .HasColumnType("int");

                    b.HasKey("SalesItemId", "IngredientId")
                        .HasName("PK__Ingredie__0FE62DCA5B3496C2");

                    b.HasIndex("IngredientId");

                    b.ToTable("IngredientSalesItem", (string)null);
                });

            modelBuilder.Entity("FoodService.Modellayer.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("ShopId")
                        .HasColumnType("int")
                        .HasColumnName("ShopID");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__OrderData__3214EC27...");

                    b.HasIndex("ShopId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("FoodService.Modellayer.Orderline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderId");

                    b.Property<decimal>("OrderlinePrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SalesItemId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Orderlin__3214EC273B1DF0EA");

                    b.HasIndex("OrderId");

                    b.HasIndex("SalesItemId");

                    b.ToTable("Orderline", (string)null);
                });

            modelBuilder.Entity("FoodService.Modellayer.SalesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsComposite")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SalesItemGroupId")
                        .HasColumnType("int")
                        .HasColumnName("SalesItemGroupID");

                    b.HasKey("Id")
                        .HasName("PK__SalesItem__3214EC2714F20DB5");

                    b.HasIndex("SalesItemGroupId");

                    b.HasIndex(new[] { "ProductNumber" }, "UQ__SalesItem__49A3C8398A3F3285")
                        .IsUnique();

                    b.ToTable("SalesItem", (string)null);
                });

            modelBuilder.Entity("FoodService.Modellayer.SalesItemComposition", b =>
                {
                    b.Property<int>("ParentItemId")
                        .HasColumnType("int");

                    b.Property<int>("ChildItemId")
                        .HasColumnType("int");

                    b.HasKey("ParentItemId", "ChildItemId");

                    b.HasIndex("ChildItemId");

                    b.ToTable("SalesItemCompositions");
                });

            modelBuilder.Entity("FoodService.Modellayer.SalesItemGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__SalesItemGroup__3214EC27745E8750");

                    b.ToTable("SalesItemGroup", (string)null);
                });

            modelBuilder.Entity("FoodService.Modellayer.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Shop__3214EC2718F16219");

                    b.ToTable("Shop", (string)null);
                });

            modelBuilder.Entity("ShopSalesItem", b =>
                {
                    b.Property<int>("SalesItemId")
                        .HasColumnType("int");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("SalesItemId", "ShopId");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopSalesItem");
                });

            modelBuilder.Entity("FoodService.Modellayer.Discount", b =>
                {
                    b.HasOne("FoodService.Modellayer.CustomerGroup", "CustomerGroup")
                        .WithMany("Discounts")
                        .HasForeignKey("CustomerGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK__Discount__Custom__49C3F6B7");

                    b.HasOne("FoodService.Modellayer.SalesItemGroup", "SalesItemGroup")
                        .WithMany("Discounts")
                        .HasForeignKey("SalesItemGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK__Discount__SalesIte__48CFD27E");

                    b.Navigation("CustomerGroup");

                    b.Navigation("SalesItemGroup");
                });

            modelBuilder.Entity("FoodService.Modellayer.IngredientOrderline", b =>
                {
                    b.HasOne("FoodService.Modellayer.Ingredient", "Ingredient")
                        .WithMany("IngredientOrderlines")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__Ingredien__Ingre__4316F928");

                    b.HasOne("FoodService.Modellayer.Orderline", "Orderline")
                        .WithMany("IngredientOrderlines")
                        .HasForeignKey("OrderlineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__Ingredien__Order__440B1D61");

                    b.Navigation("Ingredient");

                    b.Navigation("Orderline");
                });

            modelBuilder.Entity("FoodService.Modellayer.IngredientSalesItem", b =>
                {
                    b.HasOne("FoodService.Modellayer.Ingredient", "Ingredient")
                        .WithMany("IngredientSalesItems")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__Ingredien__Ingre__300424B4");

                    b.HasOne("FoodService.Modellayer.SalesItem", "SalesItem")
                        .WithMany("IngredientSalesItems")
                        .HasForeignKey("SalesItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__Ingredien__SalesIte__2F10007B");

                    b.Navigation("Ingredient");

                    b.Navigation("SalesItem");
                });

            modelBuilder.Entity("FoodService.Modellayer.Order", b =>
                {
                    b.HasOne("FoodService.Modellayer.Shop", "Shop")
                        .WithMany("Orders")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__OrderData__ShopID__32E0915F");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("FoodService.Modellayer.Orderline", b =>
                {
                    b.HasOne("FoodService.Modellayer.Order", "Order")
                        .WithMany("Orderlines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__Orderline__Order__36B12243");

                    b.HasOne("FoodService.Modellayer.SalesItem", "SalesItem")
                        .WithMany("Orderlines")
                        .HasForeignKey("SalesItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("SalesItem");
                });

            modelBuilder.Entity("FoodService.Modellayer.SalesItem", b =>
                {
                    b.HasOne("FoodService.Modellayer.SalesItemGroup", "SalesItemGroup")
                        .WithMany("SalesItems")
                        .HasForeignKey("SalesItemGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__SalesItem__SalesItem__286302EC");

                    b.Navigation("SalesItemGroup");
                });

            modelBuilder.Entity("FoodService.Modellayer.SalesItemComposition", b =>
                {
                    b.HasOne("FoodService.Modellayer.SalesItem", "ChildItem")
                        .WithMany("ChildCompositions")
                        .HasForeignKey("ChildItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FoodService.Modellayer.SalesItem", "ParentItem")
                        .WithMany("ParentCompositions")
                        .HasForeignKey("ParentItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChildItem");

                    b.Navigation("ParentItem");
                });

            modelBuilder.Entity("ShopSalesItem", b =>
                {
                    b.HasOne("FoodService.Modellayer.SalesItem", null)
                        .WithMany()
                        .HasForeignKey("SalesItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__ShopSalesItem__SalesItemId");

                    b.HasOne("FoodService.Modellayer.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK__ShopSalesItem__ShopId");
                });

            modelBuilder.Entity("FoodService.Modellayer.CustomerGroup", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("FoodService.Modellayer.Ingredient", b =>
                {
                    b.Navigation("IngredientOrderlines");

                    b.Navigation("IngredientSalesItems");
                });

            modelBuilder.Entity("FoodService.Modellayer.Order", b =>
                {
                    b.Navigation("Orderlines");
                });

            modelBuilder.Entity("FoodService.Modellayer.Orderline", b =>
                {
                    b.Navigation("IngredientOrderlines");
                });

            modelBuilder.Entity("FoodService.Modellayer.SalesItem", b =>
                {
                    b.Navigation("ChildCompositions");

                    b.Navigation("IngredientSalesItems");

                    b.Navigation("Orderlines");

                    b.Navigation("ParentCompositions");
                });

            modelBuilder.Entity("FoodService.Modellayer.SalesItemGroup", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("SalesItems");
                });

            modelBuilder.Entity("FoodService.Modellayer.Shop", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
